<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhxin.logic.system.mapper.SysMenuMapper">
  <resultMap id="SysMenuResult" type="com.zhxin.logic.system.model.SysMenu">
    <result column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
    <result column="menu_type" jdbcType="INTEGER" property="menuType" />
    <result column="is_view" jdbcType="INTEGER" property="isView" />
    <result column="is_link" jdbcType="INTEGER" property="isLink" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="perms" jdbcType="VARCHAR" property="perms" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <sql id="selectMenuVo">
        select menu_id, menu_name, parent_id, sort, menu_url, menu_type, is_link, is_view, status,  perms, icon,remark
		from sys_menu
    </sql>
  <insert id="insertMenu" parameterType="SysMenu">
    insert into sys_menu(
    <if test="menuName != null and menuName != ''">menu_name,</if>
    <if test="parentId != null and parentId != 0">parent_id,</if>
    <if test="menuUrl != null and menuUrl != ''">menu_url,</if>
    <if test="perms != null and perms != ''">perms,</if>
    <if test="icon != null and icon != ''">icon,</if>
    <if test="sort != null and sort != 0">sort,</if>
    <if test="isView != null and isView != 0">is_view,</if>
    <if test="isLink != null and isLink != 0">is_link,</if>
    <if test="status != null and status != 0">status,</if>
    <if test="menuType != null">menu_type,</if>
    <if test="remark != null and remark != ''">remark,</if>
    <if test="createdBy != null">created_by,</if>
    <if test="updatedBy != null">updated_by,</if>
    created_at,updated_at
    )values(
    <if test="menuName != null and menuName != ''">#{menuName},</if>
    <if test="parentId != null and parentId != 0">#{parentId},</if>
    <if test="menuUrl != null and menuUrl != ''">#{menuUrl},</if>
    <if test="perms != null and perms != ''">#{perms},</if>
    <if test="icon != null and icon != ''">#{icon},</if>
    <if test="sort != null and sort != 0">#{sort},</if>
    <if test="isView != null and isView != 0">#{isView},</if>
    <if test="isLink != null and isLink != 0">#{isLink},</if>
    <if test="status != null and status != 0">#{status},</if>
    <if test="menuType != null">#{menuType},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    <if test="createdBy != null">#{createdBy},</if>
    <if test="updatedBy != null">#{updatedBy},</if>
    sysdate(),sysdate()
    )
  </insert>
  <select id="selectMenuList" parameterType="SysMenu" resultMap="SysMenuResult">
    <include refid="selectMenuVo"/>
    <where>
      <if test="menuName != null and menuName != ''">
        and menu_name like concat('%', #{menuName}, '%')
      </if>
      <if test="status != null and status != ''">
        and status = #{status}
      </if>
      and deleted_flag = 0
    </where>
    order by parent_id, sort
  </select>

  <select id="selectMenuPermsByUserId" parameterType="Long" resultType="String">
		select distinct m.perms
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role r on r.role_id = ur.role_id
		where m.status = 1 and m.deleted_flag = 0 and r.status = 1 and ur.user_id = #{userId}
	</select>

  <select id="selectAllMenuForAdmin" resultMap="SysMenuResult">
        select distinct m.*
        from sys_menu m
        where m.status = 1 and m.deleted_flag = 0
  </select>

  <select id="selectMenuByUserId" parameterType="Long" resultMap="SysMenuResult">
    select distinct m.*
    from sys_menu m
    left join sys_role_menu rm on m.menu_id = rm.menu_id
    left join sys_user_role ur on rm.role_id = ur.role_id
    where m.status = 1 and m.deleted_flag = 0 and ur.user_id = #{userId}
  </select>

  <select id="checkMenuData" parameterType="SysMenu" resultMap="SysMenuResult">
    <include refid="selectMenuVo"/>
    where menu_name=#{menuName} and parent_id = #{parentId}
  </select>
  <select id="selectMenuById" parameterType="Long" resultMap="SysMenuResult">
    <include refid="selectMenuVo"/>
    where menu_id=#{menuId} and status = 1 and deleted_flag =0
  </select>
  <select id="selectMenuByRoleId" parameterType="Long" resultType="String">
		select concat(m.menu_id, ifnull(m.perms,'')) as perms
		from sys_menu m
			left join sys_role_menu rm on m.menu_id = rm.menu_id
		where rm.role_id = #{roleId}
		order by m.parent_id, m.sort
	</select>
  <update id="updateMenu" parameterType="SysMenu">
    update sys_menu
    <set>
      <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
      <if test="parentId != null">parent_id = #{parentId},</if>
      <if test="sort != null and sort != ''">sort = #{sort},</if>
      <if test="menuUrl != null and menuUrl != ''">menu_url = #{menuUrl},</if>
      <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
      <if test="isView != null ">is_view = #{isView},</if>
      <if test="isLink != null ">is_link = #{isLink},</if>
      <if test="status != null">status = #{status},</if>
      <if test="perms !=null">perms = #{perms},</if>
      <if test="icon !=null and icon != ''">icon = #{icon},</if>
      <if test="remark != null and remark != ''">remark = #{remark},</if>
      <if test="updatedBy != null and updatedBy != ''">updated_by = #{updatedBy},</if>
      updated_at = sysdate()
    </set>
    where menu_id = #{menuId}
  </update>

  <update id="softDeleteMenu" parameterType="SysMenu">
    update sys_menu
    <set>

      status = #{status},
      deleted_flag = #{deletedFlag},
      deleted_by = #{deletedBy},
      updated_at = sysdate(),
      deleted_at = sysdate(),
    </set>
    where menu_id = #{menuId}
  </update>

</mapper>