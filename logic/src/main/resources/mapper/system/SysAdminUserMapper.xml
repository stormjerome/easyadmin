<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhxin.logic.system.mapper.SysAdminUserMapper">

  <resultMap id="SysAdminUserResult" type="SysAdminUser">
    <result column="admin_user_id" jdbcType="BIGINT" property="adminUserId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="deleted_by" jdbcType="BIGINT" property="deletedBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
    <collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
  </resultMap>

  <resultMap id="deptResult" type="SysDept">
    <id     property="deptId"   column="dept_id"     />
    <result property="parentId" column="parent_id"   />
    <result property="deptName" column="dept_name"   />
    <result property="sort" column="dept_sort"   />
    <result property="status"   column="dept_status" />
  </resultMap>

  <resultMap id="RoleResult" type="SysRole">
    <id     property="roleId"       column="role_id"        />
    <result property="roleName"     column="role_name"      />
    <result property="sort"     column="role_sort"      />
    <result property="status"       column="role_status"    />
  </resultMap>

  <sql id="selectUserVo">
        select u.admin_user_id, u.user_name,u.password,u.nick_name,u.dept_id,  u.phone, u.email, u.avatar, u.status, u.deleted_flag, u.login_ip, u.login_time, u.created_at, u.created_by, u.remark,
        d.dept_id, d.parent_id, d.dept_name, d.sort as dept_sort, d.status as dept_status,
        r.role_id, r.role_name, r.sort as role_sort, r.status as role_status
        from sys_admin_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.admin_user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

  <insert id="insertUser" parameterType="SysAdminUser" useGeneratedKeys="true" keyProperty="adminUserId">
    insert into sys_admin_user(
    <if test="userName != null and userName != ''">user_name,</if>
    <if test="password != null and password != ''">password,</if>
    <if test="nickName != null and nickName != ''">nick_name,</if>
    <if test="deptId != null ">dept_id,</if>
    <if test="phone != null and phone != ''">phone,</if>
    <if test="email != null and email != ''">email,</if>
    <if test="avatar != null and avatar != ''">avatar,</if>
    <if test="status != null">status,</if>
    <if test="remark != null and remark != ''">remark,</if>
    created_at,updated_at,created_by,updated_by
    )values(
    <if test="userName != null and userName != ''">#{userName},</if>
    <if test="password != null and password != ''">#{password},</if>
    <if test="nickName != null and nickName != ''">#{nickName},</if>
    <if test="deptId != null">#{deptId},</if>
    <if test="phone != null and phone != ''">#{phone},</if>
    <if test="email != null and email != ''">#{email},</if>
    <if test="avatar != null and avatar != ''">#{avatar},</if>
    <if test="status != null">#{status},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    sysdate(),sysdate(),#{createdBy},#{updatedBy}
    )
  </insert>

  <select id="selectUserList" parameterType="SysAdminUser" resultMap="SysAdminUserResult">
    select u.admin_user_id, u.user_name,u.password,u.nick_name,u.dept_id,  u.phone, u.email, u.avatar, u.status, u.deleted_flag, u.login_ip, u.login_time, u.created_at, u.created_by, u.remark, d.dept_name
    from sys_admin_user u
    left join sys_dept d on u.dept_id = d.dept_id
    where u.deleted_flag = 0
    <if test="userName != null and userName != ''">
      AND u.user_name like concat('%', #{userName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND u.status = #{status}
    </if>
    <if test="phone != null and phone != ''">
      AND u.phone like concat('%', #{phone}, '%')
    </if>
    <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
      AND date_format(u.created_at,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
    </if>
    <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
      AND date_format(u.created_at,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
    </if>
    <if test="deptId != null and deptId != 0">
      AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{deptId},level_path) ))
    </if>

  </select>

  <select id="getUserByName" parameterType="String" resultMap="SysAdminUserResult">
    <include refid="selectUserVo"/>
    where u.user_name = #{userName}
  </select>

  <select id="getUserById" parameterType="Long" resultMap="SysAdminUserResult">
    <include refid="selectUserVo"/>
    where u.admin_user_id = #{userId}
  </select>

  <update id="updateUserStatus" parameterType="SysAdminUser">
 		update sys_admin_user set status = #{status} where admin_user_id = #{adminUserId}
	</update>

  <update id="updateUser" parameterType="SysAdminUser">
    update sys_admin_user
    <set>
      <if test="password != null and password != ''">password = #{password},</if>
      <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
      <if test="deptId != null">dept_id = #{deptId},</if>
      <if test="phone != null and phone != ''">phone = #{phone},</if>
      <if test="email != null and email != ''">email = #{email},</if>
      <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
      <if test="status != null">status = #{status},</if>
      <if test="remark != null and remark != ''">remark = #{remark},</if>
      <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
      <if test="loginTime != null">login_time = #{loginTime},</if>
      <if test="updatedBy != null and updatedBy != ''">updated_by = #{updatedBy},</if>
      updated_at = sysdate()
    </set>
    where admin_user_id = #{adminUserId}
  </update>

  <delete id="deleteUserById" parameterType="Long">
 		delete from sys_admin_user where admin_user_id = #{adminUserId}
 	</delete>

  <delete id="deleteUserByIds" parameterType="Long">
    update sys_admin_user set deleted_flag = 1  where user_id in
    <foreach collection="array" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>

</mapper>